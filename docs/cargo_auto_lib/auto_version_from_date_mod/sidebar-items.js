initSidebarItems({"fn":[["are_files_equal","if files are added or deleted, other files must be also changed I need to check if the files on the filesystem are the same as in the json"],["auto_version_from_date","Works for single projects and workspaces. new version as date is written to Cargo.toml and service_worker.js In Cargo.toml writes the version as the date `yyyy.mmdd.HHMM` ex. `2019.1221.2359`. For non-library projects, the semver specification is not really useful. Having the version as the date is just fine for executables and much more human readable. The function must be executed in the root project folder of a single project or workspace where is the Cargo.toml."],["auto_version_from_date_forced","Works for single projects and workspaces. Just like auto_version_from_date_forced(), but force the new version even if no files are changed.  For workspaces `release` I want to have the same version in all members. It is slower, but easier to understand when deployed."],["auto_version_from_date_internal",""],["do_one_project",""],["find_from","in string find from position"],["modify_service_js","search for file service_worker.js and modify version"],["read_file_metadata","make a vector of file metadata"],["read_json_file","read .auto_version_from_date.json"],["version_from_date","converts a date to a version"],["write_version_to_cargo_and_modify_metadata","move vec_of_metadata"]],"struct":[["AutoVersionFromDate","the struct that represents the file .auto_version_from_date.json"],["FileMetaData","file metadata"]]});